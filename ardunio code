#include <SPI.h>
#include <Ethernet.h>
#include "PubSubClient.h"

#define CLIENT_ID       "satya"
#define PUBLISH_DELAY   3000
#define PUB_TOPIC "control-led-resp"
#define SUB_TOPIC "control-led-req"

char light;
uint8_t mac[6] = {0x00, 0x01, 0x02, 0x03, 0x04, 0x06};

IPAddress dnServer(172, 7, 0, 254);

// the router's gateway address:
IPAddress gateway(172, 7, 0, 254);

// the subnet:
IPAddress subnet(255, 255, 0, 0);

//the IP address is dependent on your network
IPAddress ip(172, 7, 7, 43);

EthernetClient ethClient;
PubSubClient mqttClient;


void callback(char* topic, byte* payload, unsigned int length) {
  
  Serial.print("Message arrived [");
  
  Serial.print(topic);
  Serial.print("] ");
  
  String recv_mesg;
   
  for (int i=0;i<length;i++) {
    Serial.println((char)payload[i]);
    recv_mesg+=(char)payload[i];
  }
  
  if (recv_mesg == "21"){
      Serial.println("ON");
      digitalWrite(22,HIGH);
      delay(500);
    }
  else if (recv_mesg == "20"){
      Serial.println("OFF");
      digitalWrite(22,LOW);
      delay(500);
    }    
 if (recv_mesg == "31"){
      Serial.println("ON");
      digitalWrite(24,HIGH);
      delay(500);
    }
  else if (recv_mesg == "30"){
      Serial.println("OFF");
      digitalWrite(24,LOW);
      delay(500);
    }    

  if (recv_mesg == "41"){
      Serial.println("ON");
      digitalWrite(26,HIGH);
      delay(500);
    }
  else if (recv_mesg == "40"){
      Serial.println("OFF");
      digitalWrite(26,LOW);
      delay(500);
    }    

   if (recv_mesg == "51"){
      Serial.println("ON");
      digitalWrite(28,HIGH);
      delay(500);
    }
  else if (recv_mesg == "50"){
      Serial.println("OFF");
      digitalWrite(28,LOW);
      delay(500);
    }

if (recv_mesg == "61"){
      Serial.println("ON");
      digitalWrite(30,HIGH);
      delay(500);
}
  else if (recv_mesg == "60"){
      Serial.println("OFF");
      digitalWrite(30,LOW);
      delay(500);
  }
      if (recv_mesg == "71"){
      Serial.println("ON");
      digitalWrite(32,HIGH);
      delay(500);
    }
  else if (recv_mesg == "70"){
      Serial.println("OFF");
      digitalWrite(32,LOW);
      delay(500);
  }
      if (recv_mesg == "81"){
      Serial.println("ON");
      digitalWrite(34,HIGH);
      delay(500);
    }
  
  else if (recv_mesg == "80"){
      Serial.println("OFF");
      digitalWrite(34,LOW);
      delay(500);
  }

      if (recv_mesg == "91"){
      Serial.println("ON");
      digitalWrite(36,HIGH);
      delay(500);
    }
  
  else if (recv_mesg == "90"){
      Serial.println("OFF");
      digitalWrite(36,LOW);
      delay(500);
  }

    
      if (recv_mesg == "1"){
      Serial.println("ON");
      digitalWrite(22,HIGH);
      digitalWrite(24,HIGH);
      digitalWrite(26,HIGH);
      digitalWrite(28,HIGH);
      digitalWrite(30,HIGH);
      digitalWrite(32,HIGH);
      digitalWrite(34,HIGH);
      digitalWrite(36,HIGH);
      delay(500);
    }
  
  else if (recv_mesg == "0"){
      Serial.println("OFF");
      digitalWrite(22,LOW);
      digitalWrite(24,LOW);
      digitalWrite(26,LOW);
      digitalWrite(28,LOW);
      digitalWrite(30,LOW);
      digitalWrite(32,LOW);
      digitalWrite(34,LOW);
      digitalWrite(36,LOW);
      delay(500);
  }
  
  }


  
void reconnect() {
  // Loop until we're reconnected
  
  while (!mqttClient.connected()) {
   
    Serial.print("Attempting MQTT connection...");
    // Attempt to connect
    if (mqttClient.connect("c")) {
      Serial.println("connected");
      // Once connected, publish an announcement...
//      mqttClient.publish("outTopic","hello world");
      // ... and resubscribe
      mqttClient.subscribe(SUB_TOPIC);
    } 

 
void setup()
{
  Serial.begin(9600);

   // initializing digital pin 2 as an output.
  pinMode(22, OUTPUT);
  pinMode(24, OUTPUT);
   pinMode(26, OUTPUT);
  pinMode(28, OUTPUT);
  pinMode(30, OUTPUT);
  pinMode(32, OUTPUT);
  pinMode(34, OUTPUT);
   pinMode(36, OUTPUT);
   
  
  Ethernet.begin(mac, ip, dnServer, gateway, subnet);
  //print out the IP address
  Serial.print("IP = ");
  Serial.println(Ethernet.localIP());

  
  mqttClient.setClient(ethClient);
  mqttClient.setServer("13.67.186.62",8883);
  Serial.println("MQTT INITIALIZED");
  
  
  //for passward access

//  boolean rc = mqttClient.connect("satya","gtmxjryn","h78addmO2IS2");

  
  mqttClient.subscribe(SUB_TOPIC);
  
  mqttClient.setCallback(callback);
  
  
}
 
void loop()
{
  
  mqttClient.loop();

  if (!mqttClient.connected()) {
    reconnect();
  }
  
  }
